// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  uuid      String   @id @default(uuid())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  apiKeys        ApiKey[]
  projects       Project[]
  projectMembers ProjectMember[]
  messages       Message[]
}

model ApiKey {
  uuid      String   @id @default(uuid())
  userUuid  String
  key       String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userUuid], references: [uuid], onDelete: Cascade)
}

model Project {
  uuid      String   @id @default(uuid())
  userUuid  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user           User            @relation(fields: [userUuid], references: [uuid], onDelete: Cascade)
  projectMembers ProjectMember[]
  messages       Message[]
}

enum ProjectRole {
  ADMIN
  MEMBER
}

model ProjectMember {
  uuid        String      @id @default(uuid())
  projectUuid String
  userUuid    String
  role        ProjectRole @default(MEMBER)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  project Project @relation(fields: [projectUuid], references: [uuid], onDelete: Cascade)
  user    User    @relation(fields: [userUuid], references: [uuid], onDelete: Cascade)

  @@unique([projectUuid, userUuid])
}

model Locale {
  uuid      String   @id @default(uuid())
  name      String
  logoUrl   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  messages Message[]
}

model Message {
  uuid        String   @id @default(uuid())
  projectUuid String
  localeUuid  String
  userUuid    String
  key         String
  value       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  project Project @relation(fields: [projectUuid], references: [uuid], onDelete: Cascade)
  user    User    @relation(fields: [userUuid], references: [uuid], onDelete: Cascade)
  locale  Locale  @relation(fields: [localeUuid], references: [uuid], onDelete: Restrict)

  @@unique([projectUuid, localeUuid, key])
  @@index([projectUuid])
  @@index([localeUuid])
  @@index([key])
}
